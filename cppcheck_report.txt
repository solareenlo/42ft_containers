main.cpp:322:14: style: Redundant initialization for 'rit'. The initialized value is overwritten before it is read. [redundantInitialization]
    for (rit = v.rbegin(); rit != v.rend(); ++rit) *rit = ++i;
             ^
main.cpp:320:43: note: rit is initialized
    ft::vector<int>::reverse_iterator rit = v.rbegin();
                                          ^
main.cpp:322:14: note: rit is overwritten
    for (rit = v.rbegin(); rit != v.rend(); ++rit) *rit = ++i;
             ^
main.cpp:711:39: style: Local variable 'it' shadows outer variable [shadowVariable]
    for (ft::map<char, int>::iterator it = m.begin(); it != m.end(); ++it) {
                                      ^
main.cpp:706:34: note: Shadowed declaration
    ft::map<char, int>::iterator it;
                                 ^
main.cpp:711:39: note: Shadow variable
    for (ft::map<char, int>::iterator it = m.begin(); it != m.end(); ++it) {
                                      ^
main.cpp:717:39: style: Local variable 'it' shadows outer variable [shadowVariable]
    for (ft::map<char, int>::iterator it = m2.begin(); it != m2.end(); ++it) {
                                      ^
main.cpp:706:34: note: Shadowed declaration
    ft::map<char, int>::iterator it;
                                 ^
main.cpp:717:39: note: Shadow variable
    for (ft::map<char, int>::iterator it = m2.begin(); it != m2.end(); ++it) {
                                      ^
main.cpp:356:21: style: Unused variable: first [unusedVariable]
    ft::vector<int> first;
                    ^
vector.hpp:334:41: warning:inconclusive: Member variable 'vector < int , std :: allocator < int > >::m_allocator_' is not assigned a value in 'vector < int , std :: allocator < int > >::operator='. [operatorEqVarError]
vector<T, Alloc>& ft::vector<T, Alloc>::operator=(const vector& x) {
                                        ^
map.hpp:87:5: warning:inconclusive: Member variable 'map < char , int , ft :: less < Key > , std :: allocator < ft :: pair < const Key , int > > >::m_key_compare_' is not assigned in the copy constructor. Should it be copied? [uninitMemberVar]
    map(const map& x)
    ^
map.hpp:87:5: warning:inconclusive: Member variable 'map < char , std :: string , ft :: less < Key > , std :: allocator < ft :: pair < const Key , std :: string > > >::m_key_compare_' is not assigned in the copy constructor. Should it be copied? [uninitMemberVar]
    map(const map& x)
    ^
tree.hpp:244:14: style:inconclusive: Technically the member function 'ft::const_tree_iterator::operator++' can be const. [functionConst]
    iterator operator++(int) {
             ^
tree.hpp:253:14: style:inconclusive: Technically the member function 'ft::const_tree_iterator::operator--' can be const. [functionConst]
    iterator operator--(int) {
             ^
main.cpp:57:10: style:inconclusive: Technically the member function 'Compare::operator()' can be const. [functionConst]
    bool operator()(int a, int b) { return (a == b); }
         ^
vector.hpp:136:21: style:inconclusive: Technically the member function 'vector < int , std :: allocator < int > >::operator[]' can be const. [functionConst]
    reference       operator[](size_type n) { return *(m_begin_ + n); }
                    ^
vector.hpp:139:21: style:inconclusive: Technically the member function 'vector < int , std :: allocator < int > >::at' can be const. [functionConst]
    reference       at(size_type n) {
                    ^
vector.hpp:152:21: style:inconclusive: Technically the member function 'vector < int , std :: allocator < int > >::front' can be const. [functionConst]
    reference       front() { return *m_begin_; }
                    ^
vector.hpp:155:21: style:inconclusive: Technically the member function 'vector < int , std :: allocator < int > >::back' can be const. [functionConst]
    reference       back() { return *(m_end_ - 1); }
                    ^
type_traits.hpp:33:37: style:inconclusive: Technically the member function 'integral_constant < bool , true >::operatorT' can be const. [functionConst]
                                    operator T() { return v; }
                                    ^
tree.hpp:194:14: style:inconclusive: Technically the member function 'tree_iterator < ft :: pair < char , int > >::operator++' can be const. [functionConst]
    iterator operator++(int) {
             ^
tree.hpp:203:14: style:inconclusive: Technically the member function 'tree_iterator < ft :: pair < char , int > >::operator--' can be const. [functionConst]
    iterator operator--(int) {
             ^
tree.hpp:194:14: style:inconclusive: Technically the member function 'tree_iterator < ft :: pair < char , std :: string > >::operator++' can be const. [functionConst]
    iterator operator++(int) {
             ^
tree.hpp:203:14: style:inconclusive: Technically the member function 'tree_iterator < ft :: pair < char , std :: string > >::operator--' can be const. [functionConst]
    iterator operator--(int) {
             ^
tree.hpp:194:14: style:inconclusive: Technically the member function 'tree_iterator < ft :: pair < char , std > >::operator++' can be const. [functionConst]
    iterator operator++(int) {
             ^
tree.hpp:203:14: style:inconclusive: Technically the member function 'tree_iterator < ft :: pair < char , std > >::operator--' can be const. [functionConst]
    iterator operator--(int) {
             ^
utility.hpp:33:5: style: Struct 'pair < int , int >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    pair(const pair<U, V>& pr) : first(pr.first), second(pr.second) {}
    ^
utility.hpp:33:5: style: Struct 'pair < int , char >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    pair(const pair<U, V>& pr) : first(pr.first), second(pr.second) {}
    ^
utility.hpp:33:5: style: Struct 'pair < std :: string , int >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    pair(const pair<U, V>& pr) : first(pr.first), second(pr.second) {}
    ^
utility.hpp:33:5: style: Struct 'pair < std :: string , double >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    pair(const pair<U, V>& pr) : first(pr.first), second(pr.second) {}
    ^
utility.hpp:33:5: style: Struct 'pair < ft :: map < char , int , ft :: less < Key > , std :: allocator < ft :: pair < const Key , int > > > :: iterator , bool >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    pair(const pair<U, V>& pr) : first(pr.first), second(pr.second) {}
    ^
utility.hpp:33:5: style: Struct 'pair < char , int >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    pair(const pair<U, V>& pr) : first(pr.first), second(pr.second) {}
    ^
iterator.hpp:98:5: style: Class 'reverse_iterator < ft :: vector < int , std :: allocator < int > > :: iterator >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    reverse_iterator(const reverse_iterator<Iter>& rev_it)
    ^
vector.hpp:95:19: style: Local variable 'size' shadows outer function [shadowFunction]
        size_type size = ft::vector<T>::size();
                  ^
vector.hpp:90:15: note: Shadowed declaration
    size_type size() const { return static_cast<size_type>(m_end_ - m_begin_); }
              ^
vector.hpp:95:19: note: Shadow variable
        size_type size = ft::vector<T>::size();
                  ^
vector.hpp:122:19: style: Local variable 'size' shadows outer function [shadowFunction]
        size_type size = ft::vector<T>::size();
                  ^
vector.hpp:90:15: note: Shadowed declaration
    size_type size() const { return static_cast<size_type>(m_end_ - m_begin_); }
              ^
vector.hpp:122:19: note: Shadow variable
        size_type size = ft::vector<T>::size();
                  ^
vector.hpp:192:19: style: Local variable 'end' shadows outer function [shadowFunction]
        size_type end = ft::vector<T>::end() - ft::vector<T>::begin();
                  ^
vector.hpp:74:28: note: Shadowed declaration
    iterator               end() { return iterator(m_end_); }
                           ^
vector.hpp:192:19: note: Shadow variable
        size_type end = ft::vector<T>::end() - ft::vector<T>::begin();
                  ^
vector.hpp:213:19: style: Local variable 'end' shadows outer function [shadowFunction]
        size_type end = ft::vector<T>::end() - ft::vector<T>::begin();
                  ^
vector.hpp:74:28: note: Shadowed declaration
    iterator               end() { return iterator(m_end_); }
                           ^
vector.hpp:213:19: note: Shadow variable
        size_type end = ft::vector<T>::end() - ft::vector<T>::begin();
                  ^
vector.hpp:257:25: style: Local variable 'max_size' shadows outer function [shadowFunction]
        const size_type max_size = ft::vector<T>::max_size();
                        ^
vector.hpp:92:15: note: Shadowed declaration
    size_type max_size() const { return m_allocator_.max_size(); }
              ^
vector.hpp:257:25: note: Shadow variable
        const size_type max_size = ft::vector<T>::max_size();
                        ^
ori_test/main.cpp:87:27: warning: Return value of function vector_buffer.at() is not used. [ignoredReturnValue]
            vector_buffer.at(idx);
                          ^
ori_test/main.cpp:107:30: style: Variable 'copy' is assigned a value that is never used. [unreadVariable]
    { ft::map<int, int> copy = map_int; }
                             ^
iterator.hpp:98:5: style: Class 'reverse_iterator < ft :: random_access_iterator < int > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    reverse_iterator(const reverse_iterator<Iter>& rev_it)
    ^
iterator.hpp:98:5: style: Class 'reverse_iterator < ft :: random_access_iterator < const int > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    reverse_iterator(const reverse_iterator<Iter>& rev_it)
    ^
main.cpp:649:0: style: The function 'fncomp' is never used. [unusedFunction]

^
main.cpp:59:0: style: The function 'testBinaryFunction' is never used. [unusedFunction]

^
main.cpp:401:0: style: The function 'testCopy' is never used. [unusedFunction]

^
main.cpp:433:0: style: The function 'testEqual' is never used. [unusedFunction]

^
main.cpp:634:0: style: The function 'testIteratorTraits' is never used. [unusedFunction]

^
main.cpp:47:0: style: The function 'testLess' is never used. [unusedFunction]

^
main.cpp:448:0: style: The function 'testLexicographicalCompare' is never used. [unusedFunction]

^
main.cpp:373:0: style: The function 'testMakePair' is never used. [unusedFunction]

^
main.cpp:687:0: style: The function 'testMapInsert' is never used. [unusedFunction]

^
main.cpp:723:0: style: The function 'testMapIterator' is never used. [unusedFunction]

^
main.cpp:408:0: style: The function 'testMax' is never used. [unusedFunction]

^
main.cpp:415:0: style: The function 'testMin' is never used. [unusedFunction]

^
main.cpp:462:0: style: The function 'testPairConstructor' is never used. [unusedFunction]

^
main.cpp:393:0: style: The function 'testPairOperatoEqual' is never used. [unusedFunction]

^
main.cpp:382:0: style: The function 'testPairRelationalOperators' is never used. [unusedFunction]

^
main.cpp:609:0: style: The function 'testReverseIteratorBase' is never used. [unusedFunction]

^
main.cpp:621:0: style: The function 'testReverseIteratorConstructor' is never used. [unusedFunction]

^
main.cpp:596:0: style: The function 'testReverseIteratorOperatorAsterisk' is never used. [unusedFunction]

^
main.cpp:553:0: style: The function 'testReverseIteratorOperatorMinus' is never used. [unusedFunction]

^
main.cpp:531:0: style: The function 'testReverseIteratorOperatorMinusEqual' is never used. [unusedFunction]

^
main.cpp:540:0: style: The function 'testReverseIteratorOperatorMinusMinus' is never used. [unusedFunction]

^
main.cpp:477:0: style: The function 'testReverseIteratorOperatorMinusNonmember' is never used. [unusedFunction]

^
main.cpp:508:0: style: The function 'testReverseIteratorOperatorOffset' is never used. [unusedFunction]

^
main.cpp:587:0: style: The function 'testReverseIteratorOperatorPlus' is never used. [unusedFunction]

^
main.cpp:562:0: style: The function 'testReverseIteratorOperatorPlusEqual' is never used. [unusedFunction]

^
main.cpp:486:0: style: The function 'testReverseIteratorOperatorPlusNonmember' is never used. [unusedFunction]

^
main.cpp:571:0: style: The function 'testReverseIteratorOperatorPlusPlus' is never used. [unusedFunction]

^
main.cpp:517:0: style: The function 'testReverseIteratorOperatorPointer' is never used. [unusedFunction]

^
main.cpp:495:0: style: The function 'testReverseIteratorRelationalOperators' is never used. [unusedFunction]

^
main.cpp:422:0: style: The function 'testSwap' is never used. [unusedFunction]

^
main.cpp:186:0: style: The function 'testVectorAssign' is never used. [unusedFunction]

^
main.cpp:220:0: style: The function 'testVectorAt' is never used. [unusedFunction]

^
main.cpp:201:0: style: The function 'testVectorBack' is never used. [unusedFunction]

^
main.cpp:340:0: style: The function 'testVectorBegin' is never used. [unusedFunction]

^
main.cpp:279:0: style: The function 'testVectorCapacity' is never used. [unusedFunction]

^
main.cpp:112:0: style: The function 'testVectorClear' is never used. [unusedFunction]

^
main.cpp:355:0: style: The function 'testVectorConstructor' is never used. [unusedFunction]

^
main.cpp:268:0: style: The function 'testVectorEmpty' is never used. [unusedFunction]

^
main.cpp:334:0: style: The function 'testVectorEnd' is never used. [unusedFunction]

^
main.cpp:140:0: style: The function 'testVectorErase' is never used. [unusedFunction]

^
main.cpp:212:0: style: The function 'testVectorFront' is never used. [unusedFunction]

^
main.cpp:99:0: style: The function 'testVectorGetAllocator' is never used. [unusedFunction]

^
main.cpp:150:0: style: The function 'testVectorInsert' is never used. [unusedFunction]

^
main.cpp:299:0: style: The function 'testVectorMaxSize' is never used. [unusedFunction]

^
main.cpp:346:0: style: The function 'testVectorOperatorEqual' is never used. [unusedFunction]

^
main.cpp:228:0: style: The function 'testVectorOperatorReference' is never used. [unusedFunction]

^
main.cpp:164:0: style: The function 'testVectorPopBack' is never used. [unusedFunction]

^
main.cpp:177:0: style: The function 'testVectorPushBack' is never used. [unusedFunction]

^
main.cpp:326:0: style: The function 'testVectorRbegin' is never used. [unusedFunction]

^
main.cpp:88:0: style: The function 'testVectorRelationalOperators' is never used. [unusedFunction]

^
main.cpp:318:0: style: The function 'testVectorRend' is never used. [unusedFunction]

^
main.cpp:243:0: style: The function 'testVectorReserve' is never used. [unusedFunction]

^
main.cpp:287:0: style: The function 'testVectorResize' is never used. [unusedFunction]

^
main.cpp:307:0: style: The function 'testVectorSize' is never used. [unusedFunction]

^
main.cpp:128:0: style: The function 'testVectorSwap' is never used. [unusedFunction]

^
main.cpp:74:0: style: The function 'testVectorSwapNonMember' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingInclude]

